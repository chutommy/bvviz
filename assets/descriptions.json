{
  "help_quantum_system": "Choose a quantum simulator backend for the experiment. The number next to each backend name indicates the maximum number of qubits the simulator can handle.",
  "help_shots": "Enter the number of times the circuit will be executed, providing statistical results from multiple measurements. Consider a higher number of shots for better accuracy, but note that it will also increase the computational time.",
  "help_simulator_seed": "Seed to control simulator sampling.",
  "help_secret_str": "Enter a secret string for the Bernstein-Vazirani algorithm, which determines the value to be discovered using the quantum circuit. This string must consist of 0s and 1s. Note that the length of the secret string must not exceed the number of qubits in the backend simulator minus one, as one qubit is reserved for the ancilla qubit.",
  "help_reset_err": "Specify the error rate for qubit reset operation, which is the probability that a qubit fails to be reset to the initial state.",
  "help_measurement_err": "Specify the error rate for the measurement operation, which is the probability of obtaining an incorrect outcome after performing a measurement on a single qubit.",
  "help_single_gate_err": "Specify the error rate for single-qubit gates, which models the probability of error during the execution of a single-qubit gate operations (X, H).",
  "help_double_gate_err": "Specify the error rate for two-qubit gates, which models the probability of error during the execution of a two-qubit gate operation (CNOT).",
  "help_layout_method": "Choose a layout method for the transpiler to map the circuit qubits to physical qubits on the quantum hardware.",
  "help_routing_method": "Choose a routing method for the transpiler to optimize the qubit connections and minimize the errors introduced during the circuit execution.",
  "help_translation_method": "Choose a translation method for the transpiler to convert the circuit instructions into the instructions compatible with the selected backend.",
  "help_optimization_level": "Select an optimization level for the transpiler to optimize the circuit's performance by reducing the number of gates, reducing the circuit depth, or minimizing the number of SWAP gates required for qubit mapping. The higher the optimization level, the more aggressive the optimization process, which can lead to faster execution time but may also affect the circuit's accuracy.",
  "help_approximation_degree": "Specify an approximation degree for the transpiler to approximate the circuit's gates using a lower number of gates, reducing the circuit's overall complexity.",
  "help_transpiler_seed": "Seed for the stochastic parts of the transpiler.",
  "help_classical_solution": "The solution obtained by the classical algorithm which was computed using classical computation methods.",
  "help_quantum_solution": "The solution obtained by the quantum circuit which was computed using quantum computation methods",
  "help_cl_bits": "The number of classical bits used in the quantum circuit to store and process classical information. These bits are used to control the quantum operations and obtain measurement results.",
  "help_qu_bits": "The number of qubits used in the quantum circuit.",
  "help_qu_gates": "The number of elementary operations or quantum gates that were used in the experiment to implement the desired computation.",
  "help_qu_bits_cap": "The maximum number of qubits that can be used in a single experiment on this quantum computing device",
  "help_openqasm": "Download the OpenQASM code for the circuit used in the experiment.",
  "help_measurement_csv": "Download measurements of the experiment as a CSV file. The file will contain raw data from the experiment, including the binary outcome of each measurement in the order in which they were taken. The file is saved in a comma-separated value format and can be imported into spreadsheet or analysis software for further processing or visualization.",
  "help_counts_json": "Download the counts of the experiment as a JSON file. The file will contain raw data, including the counts of each measured state. Consider using this data for further analysis or visualization.",
  "err_secret_str_length": "The length of the secret string ({str_len}) exceeds the number of qubits in the backend simulator minus one ({qu_num} - 1).",
  "err_secret_str_value": "The secret string should only consist of 0s and 1s.",
  "warn_failure": "Execution failed due to invalid configuration settings. Please ensure all values are valid and fully compatible with the selected backend before taking the next step.",
  "text_circuit_layout": "This is the layout of a circuit transpiled for the target backend. You can see a visual representation of the physical qubits that were used and how they were connected, providing important information for understanding how the quantum circuit is mapped onto the hardware.\n\nBy analyzing the layout, you can gain insights into the performance of the circuit on the target hardware, as well as the potential for optimization or further refinement. Overall, the layout provides a valuable tool for understanding and visualizing the complex interactions between the quantum circuit and the underlying hardware.",
  "text_error_map": "An error map provides a visualization of the error rates for each qubit and gate in a quantum computing backend. By examining the error map, users can identify the regions of the hardware that may be more prone to errors, and adjust their configuration settings accordingly to optimize the performance of their quantum circuits. The error rates are represented using a color scale, with higher error rates indicated by lighter colors.\n\nIt is important to note that the error map shown in the web app is for the default configuration of the backend, and may differ depending on the specific configuration settings chosen by the user.",
  "text_quantum_circuit": "In the plot, the qubits are represented as horizontal lines, with the gates or operations acting on them placed vertically at the appropriate locations along the lines. The order of the gates indicates the order of their application in the circuit, and the type of gate is shown by its label, shape and color."
}